# Generated by Django 3.2.6 on 2022-02-26 18:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Tutor'), (3, 'Student'), (4, 'Principal'), (5, 'Adminsec')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BilItems',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bills',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Total', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassCategories',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='MailMessage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, null=True)),
                ('message', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SessionYearModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_start_year', models.CharField(max_length=255)),
                ('session_end_year', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StaffPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('post_name', models.CharField(max_length=255)),
                ('spec', models.CharField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=255)),
                ('other_name', models.CharField(max_length=255)),
                ('dob', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=255)),
                ('soo', models.CharField(max_length=255)),
                ('religion', models.CharField(max_length=255)),
                ('contact_email', models.CharField(max_length=255)),
                ('contact_phone', models.CharField(max_length=255)),
                ('former_school', models.CharField(max_length=255)),
                ('school_phone', models.CharField(max_length=255)),
                ('applying_for', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
                ('exam_date', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=255)),
                ('term1_resources', models.FileField(upload_to='')),
                ('term2_resources', models.FileField(upload_to='')),
                ('term3_resources', models.FileField(upload_to='')),
                ('outline', models.FileField(upload_to='')),
                ('class_category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.classcategories')),
                ('class_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=255)),
                ('profile_pic', models.FileField(upload_to='')),
                ('address', models.TextField()),
                ('religion', models.CharField(default='Nigeria', max_length=255)),
                ('origin_state', models.CharField(default='Nigeria', max_length=255)),
                ('dob', models.CharField(default='00-00-000', max_length=255)),
                ('admission_class', models.IntegerField(default=0)),
                ('parent_name', models.CharField(default=' ', max_length=255)),
                ('parent_email', models.CharField(default=' ', max_length=255)),
                ('parent_phone', models.CharField(default='+234', max_length=255)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('class_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.classcategories')),
                ('class_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.classes')),
                ('session_year_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StudentExitReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_messagee', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('to_pay', models.FloatField(default=0, null=True)),
                ('total_payed', models.FloatField(default=0, null=True)),
                ('surplus', models.FloatField(default=0, null=True)),
                ('latest_bill', models.FloatField(default=0, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('students', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('profile_pic', models.FileField(upload_to='')),
                ('phone', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('dob', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_phone', models.CharField(max_length=255)),
                ('contact_rel', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fcm_token', models.TextField(default='')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_held', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.staffpost')),
            ],
        ),
        migrations.CreateModel(
            name='SeniorCost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_new', models.IntegerField(default=0)),
                ('first_old', models.IntegerField(default=0)),
                ('second_new', models.IntegerField(default=0)),
                ('second_old', models.IntegerField(default=0)),
                ('third_new', models.IntegerField(default=0)),
                ('third_old', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('reference_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.bilitems')),
            ],
        ),
        migrations.CreateModel(
            name='Psycomotor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('handwriting', models.IntegerField(default=0)),
                ('verbal', models.IntegerField(default=0)),
                ('sport', models.IntegerField(default=0)),
                ('knitting', models.IntegerField(default=0)),
                ('result_type', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.staff')),
            ],
        ),
        migrations.CreateModel(
            name='MidTerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('resumption_text', models.FloatField(default=0)),
                ('class_work', models.FloatField(default=0)),
                ('assignment', models.FloatField(default=0)),
                ('midterm_exam', models.FloatField(default=0)),
                ('total_score', models.FloatField(default=0)),
                ('grades', models.CharField(default='F', max_length=20)),
                ('remark', models.CharField(default='Poor', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
                ('students_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
                ('subjects_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subjects')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_messagee', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.staff')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='JuniorCost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_new', models.IntegerField(default=0)),
                ('first_old', models.IntegerField(default=0)),
                ('second_new', models.IntegerField(default=0)),
                ('second_old', models.IntegerField(default=0)),
                ('third_new', models.IntegerField(default=0)),
                ('third_old', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('reference_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.bilitems')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('Feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.staff')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='EndTerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ca1', models.FloatField(default=0)),
                ('ca2', models.FloatField(default=0)),
                ('project_practical', models.FloatField(default=0)),
                ('class_work', models.FloatField(default=0)),
                ('sec_total', models.FloatField(default=0)),
                ('first_total', models.FloatField(default=0)),
                ('second_total', models.FloatField(default=0)),
                ('endterm_exam', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('grades', models.CharField(default='F', max_length=20)),
                ('effort', models.CharField(default='00', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
                ('students_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
                ('subjects_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subjects')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=255)),
                ('relationship', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('phone1', models.CharField(max_length=255)),
                ('phone2', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('related_to', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='classcategories',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes'),
        ),
        migrations.AddField(
            model_name='classcategories',
            name='form_tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClassAverage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('avg_percent', models.FloatField(default=0)),
                ('result_type', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
                ('student_class', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.classes')),
                ('students_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.terms')),
            ],
        ),
        migrations.CreateModel(
            name='Breakdown',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('reference_bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.bills')),
                ('reference_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.bilitems')),
            ],
        ),
        migrations.AddField(
            model_name='bills',
            name='session_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel'),
        ),
        migrations.AddField(
            model_name='bills',
            name='students',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students'),
        ),
        migrations.AddField(
            model_name='bills',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms'),
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.attendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.students')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='session_year_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.subjects'),
        ),
        migrations.CreateModel(
            name='AffectiveDomain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('punctuality', models.IntegerField(default=0)),
                ('neatness', models.IntegerField(default=0)),
                ('initiative', models.IntegerField(default=0)),
                ('leadership', models.IntegerField(default=0)),
                ('health', models.IntegerField(default=0)),
                ('attentiveness', models.IntegerField(default=0)),
                ('perseverance', models.IntegerField(default=0)),
                ('helping', models.IntegerField(default=0)),
                ('co_others', models.IntegerField(default=0)),
                ('emotional', models.IntegerField(default=0)),
                ('result_type', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.sessionyearmodel')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.students')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.terms')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
